@model WebApplication2.Models.FriendsViewModel
@{
    ViewBag.Title = "Friends page";
}

<h2 style="color:white">Find friends</h2>
@using (Html.BeginForm("Search", "Friends",new { isFriendPage = @ViewBag.isFriendPage}, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
 @Html.AntiForgeryToken()
    
 <hr />
 @Html.ValidationSummary("", new { @class = "text-danger" })
<form class="form-horizontal">
    <div class="row">
        <div class="col-sm-5">
            <div class="form-group">
                <label  class="control-label col-xs-3" style="color:white">First name</label>
                <div class="col-xs-9">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="form-group">
                <label  class="control-label col-xs-3" style="color:white">Last name</label>
                <div class="col-xs-9">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    
                </div>
            </div>
        </div>
        <div class="col-sm-2">
            <button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-search"></span>Search</button>
        </div>
        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
        <input type="button" class="btn btn-basic" value="Sort by first name" onclick="location.href='@Url.Action("SortFriendsByName", "Friends", new { name = Model.FirstName, surname = Model.LastName, isFriendPage = ViewBag.isFriendPage})'" />
        &nbsp; &nbsp; &nbsp; &nbsp;
        <input type="button" class="btn btn-basic" value="Sort by last name" onclick="location.href='@Url.Action("SortFriendsBySurname", "Friends", new { name = Model.FirstName, surname = Model.LastName,isFriendPage = ViewBag.isFriendPage})'" />
        <br /> <br />

    </div>
</form>
}
<div style="overflow-y: scroll; position:relative">
    @if (ViewBag.usersToShow.Count > 0)
    {

        foreach (var reg in ViewBag.usersToShow)
        {
            int br = 0;
        <div class="jumbotron" style="background-color:rgba(211,211,211,0.2);  width: 600px; margin:0 auto ">
            <dl class="dl-horizontal">
                <dt style="width: 300px; text-align:left; opacity:1.0"><label style="font-size: 16px; color:white">@reg.Name @reg.LastName, @reg.City </label> </dt>
                <dd>
                    @if (ViewBag.FriendList.Count > 0 || ViewBag.pendinglist.Count > 0)
                    {
                        if (ViewBag.FriendList.Count > 0)
                        {
                            foreach (var friend in ViewBag.FriendList)
                            {
                                if (reg.Equals(friend))
                                {
                                    br++;
                                    <input type="button" class="btn btn-danger" value="Remove Friend" onclick="location.href='@Url.Action("RemoveFriend", "Friends",new { username = @reg.UserName , name = @Model.FirstName , lastname = @Model.LastName, isFriendPage = @ViewBag.isFriendPage})'" />
                                    break;
                                }

                            }
                        }
                        if (br == 0)
                        {
                            if (ViewBag.pendinglist.Count > 0)
                            {

                                foreach (var wait in ViewBag.pendinglist)
                                {
                                    if (reg.Id.Equals(wait.Id))
                                    {
                                        br++;
                                        <input type="button" class="btn btn-warning" value="Cancel request" onclick="location.href='@Url.Action("CancelFriend", "Friends",new { username = @reg.UserName , name = @Model.FirstName , lastname = @Model.LastName})'" />

                                        break;
                                    }

                                }
                            }
                        }
                        if (br == 0)
                        {
                            <input type="button" class="btn btn-success" value="Add Friend" onclick="location.href='@Url.Action("AddFriend", "Friends",new { username = @reg.UserName , name = @Model.FirstName , lastname = @Model.LastName})'" />
                        }

                    }
                    else
                    {
                        <input type="button" class="btn btn-success" value="Add Friend" onclick="location.href='@Url.Action("AddFriend", "Friends",new { username = @reg.UserName , name = @Model.FirstName , lastname = @Model.LastName})'" />

                    }
                </dd>
            </dl>
        </div>
        <br />
    }
}
</div>