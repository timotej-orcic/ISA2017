@model Isa2017Cinema.Models.Hall
@{
    ViewBag.Title = "Seats";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/jquery.seat-charts2.css")
@Styles.Render("~/Content/style2.css")
@Scripts.Render("~/Scripts/jquery.seat-charts2.js")
<div class="wrapper">
    <br /> <br /><br /><br /><br /><br /><br />
    <div class="container">
        <div id="seat-map">
            <div class="front-indicator">Front</div>

        </div>
        <div class="booking-details" >
           
            
            <div id="legend" style="color:white; width: 150px;"></div>
        </div>
        
    </div>
</div>
<input type="button" id="rateprojection" class="btn btn-basic" value="Save changes" onclick="Reserve()" />



<script>
    var firstSeatLabel = 1;

    var niz = [];

   @for (int x = 0; x < @Model.RowsCount; x++) {
    {
        <text>
              niz.push('@Model.Seats[x].Seats');
        </text>
    }
    }
    

    function Reserve(){
        
        var arr = [];
        arr.push('@Model.Id');
        debugger;
        for(var i=0; i<document.getElementsByClassName("unavailable").length; i++ ){
            var ss=  document.getElementsByClassName("unavailable")[i].id;
            arr.push(ss);
        }
        arr.push("razmak");
        for(var i=0; i<document.getElementsByClassName("selected").length; i++ ){
            var ss=  document.getElementsByClassName("selected")[i].id;
            arr.push(ss);
        }
        arr.push("razmak2");
        for (var i = 0; i < document.getElementsByClassName("xxx").length; i++) {
            var ss = document.getElementsByClassName("xxx")[i].id;
            arr.push(ss);
        }
        $.ajax({
            url: '../Hall/ChangeSeats',
            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify(arr),
            success: function (data)
            {
                
              
                window.location.reload();
            }
        });
    }
            $(document).ready(function () {
                    var $cart = $('#selected-seats'),
					$counter = $('#counter'),
					$total = $('#total'),
					sc = $('#seat-map').seatCharts({
                    map: niz,
                    status: 'unavailable',
                    seats: {
                        f: {
                            price   : 100,
                            classes : 'zzz', //your custom CSS class
                            category: 'First Class'


                        },
                        e: {
                            price   : 40,
                            classes : 'economy-class', //your custom CSS class
                            category: 'Economy Class'

                        },
                        o: {
                            price: 40,
                            classes: 'emptyspace', //your custom CSS class
                            category: 'Economy Class'

                        }

                    },
					naming : {
                                top : false,
						getLabel : function (character, row, column) {
                                        return firstSeatLabel++;
                                    },
					},
					legend : {
                                node : $('#legend'),
                                items: [

                   ['v', 'sss', 'Available seats'],
                   ['d', 'ccc', 'Balcony / vip'],
                   ['g', 'yyy', 'Empty space'],
                   ['e', 'selected', 'Make vip or balcony'],
                   ['b', 'unavailable', 'Make empty space'],
                   ['x', 'xxx', 'Make available seat']
                                ]
					},
					click: function () {
					    if (this.status() == 'available') {
					        
					        return 'selected';
					    } else if (this.status() == 'selected') {
					       
					        return 'unavailable';
					    } else if (this.status() == 'unavailable') {
					        //seat has been already booked
					        return 'xxx';
					    } else if (this.status() == 'xxx') {
					        //seat has been already booked
					        return 'available';
					    } else {
					        return this.style();
					    }
					}
                });

				//this will handle "[cancel]" link clicks
				$('#selected-seats').on('click', '.cancel-cart-item', function () {
                    //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
                    sc.get($(this).parents('li:first').data('seatId')).click();
                });

				//let's pretend some seats have already been booked
				//sc.get(['1_2', '4_1', '7_1', '7_2']).status('unavailable');

		});

		function recalculateTotal(sc) {
                    var total = 0;

                    //basically find every selected seat and sum its price
                    sc.find('selected').each(function () {
                        total += this.data().price;
                    });

                    return total;
                }

</script>


