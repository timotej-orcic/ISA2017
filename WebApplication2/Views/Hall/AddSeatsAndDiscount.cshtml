@model WebApplication2.Models.FastReserveTicket
@{
    ViewBag.Title = "AddSeatsAndDiscount";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/jquery.seat-charts.css")
@Styles.Render("~/Content/style.css")
@Scripts.Render("~/Scripts/jquery.seat-charts.js")
<br />
<br />
<div class="form-group">
    @Html.LabelFor(m => m.Krmaca, new { @class = "col-md-2 control-label", style = "color:white; font-size: 16px;" })
    
    <div class="col-md-10">
        <input type="text" id="unoskrmace" />
    </div>
   
</div>
<br />
<br />
<div class="wrapper">

    <div class="container">
        
        <div id="seat-map">
            <div class="front-indicator">Front</div>

        </div>
        <div class="booking-details">

            <h3 style="color:white"> Selected Seats (<span id="counter">0</span>):</h3>
            <ul id="selected-seats" style="color:white"></ul>

            <button id="buttonreserve" onclick="Reserve()" class="checkout-button">Add tickets &raquo;</button>
            <div id="legend" style="color:white"></div>
            
        </div>
        
    </div>
    
</div>




<script>
    var firstSeatLabel = 1;


    var niz = [];

   @for (int x = 0; x < @Model.hallTimeProj.Hall.RowsCount; x++) {
       {
        <text>
              niz.push('@Model.hallTimeProj.Seats[x].Seats');
        </text>
       }
   }

    function Reserve(){
        debugger;
        var arr = [];
        arr.push('@Model.hallTimeProj.Id');
        arr.push(document.getElementById("unoskrmace").value);
        for(var i=0; i<document.getElementById("selected-seats").childNodes.length; i++ ){
            var ss=  document.getElementById("selected-seats").childNodes[i].id;
            ss = ss.substring(10);
            arr.push(ss);
        }

        $.ajax({
            url: '../Hall/SaveFastTickets',
            type: 'POST',
            contentType: 'application/json;',
            data: JSON.stringify(arr),
            success: function (data)
            {
                debugger;

                window.location.reload();
            }
        });
    }
    $(document).ready(function () {
        var $cart = $('#selected-seats'),
        $counter = $('#counter'),
        $total = $('#total'),
        sc = $('#seat-map').seatCharts({
            map: niz,

            seats: {
                f: {
                    price   : 100,
                    classes : 'first-class', //your custom CSS class
                    category: 'First Class'


                },
                e: {
                    price   : @Model.hallTimeProj.TicketPrice,
                    classes : 'economy-class', //your custom CSS class
                    category: 'Economy Class'

                }

            },
            naming : {
                top : false,
                getLabel : function (character, row, column) {
                    return firstSeatLabel++;
                },
            },
            legend : {
                node : $('#legend'),
                items : [

                    [ 'f', 'available',   'Taken Seats' ],

                    [ 'e', 'available',   'Free seats']
                    //[ 'b', 'unavailable', 'Already Booked']
                ]
            },
            click: function () {
                if (this.status() == 'available') {
                    //let's create a new <li> which we'll add to the cart items
                    $('<li> Seat # '+this.settings.label+': <b> RSD</b> <a href="#" class="cancel-cart-item">[cancel]</a></li>')
                        .attr('id', 'cart-item-'+this.settings.id)
                        .data('seatId', this.settings.id)
                        .appendTo($cart);

                    /*
                     * Lets update the counter and total
                     *
                     * .find function will not find the current seat, because it will change its stauts only after return
                     * 'selected'. This is why we have to add 1 to the length and the current seat price to the total.
                     */
                    $counter.text(sc.find('selected').length+1);
                    $total.text(recalculateTotal(sc)+this.data().price);

                    return 'selected';
                } else if (this.status() == 'selected') {
                    //update the counter
                    $counter.text(sc.find('selected').length-1);
                    //and total
                    $total.text(recalculateTotal(sc)-this.data().price);

                    //remove the item from our cart
                    $('#cart-item-'+this.settings.id).remove();

                    //seat has been vacated
                    return 'available';
                } else if (this.status() == 'unavailable') {
                    //seat has been already booked
                    return 'unavailable';
                } else {
                    return this.style();
                }
            }
        });

        //this will handle "[cancel]" link clicks
        $('#selected-seats').on('click', '.cancel-cart-item', function () {
            //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
            sc.get($(this).parents('li:first').data('seatId')).click();
        });

        //let's pretend some seats have already been booked
        //sc.get(['1_2', '4_1', '7_1', '7_2']).status('unavailable');

    });

    function recalculateTotal(sc) {
        var total = 0;

        //basically find every selected seat and sum its price
        sc.find('selected').each(function () {
            total += this.data().price;
        });

        return total;
    }

</script>

